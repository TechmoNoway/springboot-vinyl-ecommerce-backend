<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trikynguci.springbootvinylecommercebackend.mapper.OrderMapper">

	<resultMap type="com.trikynguci.springbootvinylecommercebackend.model.Order"
		id="orderResultMap">
		<result column="id" property="id" />
		<result column="customer_id" property="customerId" />
		<result column="customer_address" property="customerAddress" />
		<result column="customer_phone" property="customerPhone" />
		<result column="note" property="note" />
		<result column="total_price" property="totalPrice" />
		<result column="status" property="status" />
		<result column="fullname" property="fullname" />
		<result column="order_date" property="orderDate" />
		<result column="email" property="email" />
		<collection column="id" property="items" javaType="List" ofType="OrderItem" select="com.trikynguci.springbootvinylecommercebackend.mapper.OrderItemMapper.getOrderItemsByOrderId"/>
	</resultMap>

	<select id="getAllOrders" resultMap="orderResultMap">
		select ord.id
		, ord.customer_id
		, ord.customer_address
		, ord.customer_phone
		, ord.note
		, ord.total_price
		, ord.status
		, ord.fullname
		, ord.order_date
		, ord.email
		from orders ord
	</select>

	<select id="getOrdersByUserId" resultMap="orderResultMap">
		select ord.id
			 , ord.customer_id
			 , ord.customer_address
			 , ord.customer_phone
			 , ord.note
			 , ord.total_price
		     , ord.status
			 , ord.fullname
			 , ord.order_date
			 , ord.email
		from orders ord
		where ord.customer_id = #{userId}
	</select>

	<insert id="saveOrder">
		insert into orders
		( id
		, customer_id
		, customer_address
		, customer_phone
		, note
		, total_price
		, status
		, fullname
		, order_date
		, email)
		VALUES ( #{id}
			   , #{customerId}
			   , #{customerAddress}
			   , #{customerPhone}
			   , #{note}
			   , #{totalPrice}
			   , #{status}
			   , #{fullname}
			   , NOW()
			   , #{email});
	</insert>

	<update id="updateOrderStatus">
		UPDATE orders SET status = #{status} WHERE id = #{orderId}
	</update>

	<select id="getOrderById" resultMap="orderResultMap">
		select ord.id
			 , ord.customer_id
			 , ord.customer_address
			 , ord.customer_phone
			 , ord.note
			 , ord.total_price
			 , ord.status
			 , ord.fullname
			 , ord.order_date
			 , ord.email
		from orders ord
		where ord.id = #{orderId}
	</select>
</mapper>