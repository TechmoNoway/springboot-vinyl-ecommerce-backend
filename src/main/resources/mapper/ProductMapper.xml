<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trikynguci.springbootvinylecommercebackend.mapper.ProductMapper">
	<resultMap type="com.trikynguci.springbootvinylecommercebackend.model.Product"
		id="productResultMap">
		<result column="id" property="id" />
		<result column="title" property="title" />
		<result column="price" property="price" />
		<result column="stock_quantity" property="stockQuantity" />
		<result column="poster_url" property="posterUrl" />
		<result column="region" property="region" />
		<result column="artist" property="artist" />
		<result column="release_year" property="releaseYear" />
		<result column="status" property="status" />
		<result column="platform" property="platform" />
		<result column="set" property="set" />
		<result column="demo_audio_url" property="demoAudioUrl" />
		<result column="studio_name" property="studioName" />
		<result column="manufacture_year" property="manufactureYear" />
		<result column="stock_status" property="stockStatus" />
		<result column="description" property="description" />
		<result column="mood" property="mood" />
		<result column="created_at" property="createdAt" />
		<result column="updated_at" property="updatedAt" />
		<collection column="id" property="categories" javaType="List" ofType="ProductCategory" select="com.trikynguci.springbootvinylecommercebackend.mapper.ProductCategoryMapper.getAllCategoriesByProductId"/>
	</resultMap>

	<select id="getAllProducts" resultMap="productResultMap">
        select dsc.id
             , dsc.title
             , dsc.price
             , dsc.stock_quantity
             , dsc.poster_url
             , dsc.region
             , dsc.artist
             , dsc.release_year
             , dsc.status
             , dsc.platform
             , dsc.demo_audio_url
             , dsc.studio_name
             , dsc.manufacture_year
             , dsc.stock_status
             , dsc.description
             , dsc.mood
             , dsc.created_at
             , dsc.updated_at
             , dsc.tracklist_id
        from product dsc
    </select>

	<select id="getReadyProducts" resultMap="productResultMap">
		select dsc.id
			 , dsc.title
			 , dsc.price
			 , dsc.stock_quantity
			 , dsc.poster_url
			 , dsc.region
			 , dsc.artist
			 , dsc.release_year
			 , dsc.status
			 , dsc.platform
			 , dsc.demo_audio_url
			 , dsc.studio_name
			 , dsc.manufacture_year
			 , dsc.stock_status
			 , dsc.description
			 , dsc.mood
			 , dsc.created_at
			 , dsc.updated_at
			 , dsc.tracklist_id
		from product dsc
		limit 8
	</select>

	<select id="getProductByTitle" resultMap="productResultMap">
		select dsc.id
			 , dsc.title
			 , dsc.price
			 , dsc.stock_quantity
			 , dsc.poster_url
			 , dsc.region
			 , dsc.artist
			 , dsc.release_year
			 , dsc.status
			 , dsc.platform
		     , dsc.set
			 , dsc.demo_audio_url
			 , dsc.studio_name
			 , dsc.manufacture_year
			 , dsc.stock_status
			 , dsc.description
			 , dsc.mood
			 , dsc.created_at
			 , dsc.updated_at
			 , dsc.tracklist_id
		from product dsc
		where upper(dsc.title) = upper(#{title})
	</select>

	<select id="searchProductsByTitle" resultMap="productResultMap">
		select dsc.id
			 , dsc.title
			 , dsc.price
			 , dsc.stock_quantity
			 , dsc.poster_url
			 , dsc.region
			 , dsc.artist
			 , dsc.release_year
			 , dsc.status
			 , dsc.platform
			 , dsc.demo_audio_url
			 , dsc.studio_name
			 , dsc.manufacture_year
			 , dsc.stock_status
			 , dsc.description
			 , dsc.mood
			 , dsc.created_at
			 , dsc.updated_at
			 , dsc.tracklist_id
		from product dsc
		where upper(dsc.title) like upper(concat('%', #{searchParam}, '%'))
		OR upper(dsc.title) LIKE upper(concat('%', #{searchParam}, '%'))
		limit 5
	</select>
	
	<select id="getAllProductsFilteredAndSorted" resultMap="productResultMap">
		select dsc.id
			 , dsc.title
			 , dsc.price
			 , dsc.stock_quantity
			 , dsc.poster_url
			 , dsc.region
			 , dsc.artist
			 , dsc.release_year
			 , dsc.status
			 , dsc.platform
		     , dsc.set
			 , dsc.demo_audio_url
			 , dsc.studio_name
			 , dsc.manufacture_year
			 , dsc.stock_status
			 , dsc.description
			 , dsc.mood
			 , dsc.created_at
			 , dsc.updated_at
			 , dsc.tracklist_id
		from product dsc
		left join product_category pc on dsc.id = pc.product_id
		<where>
			<if test="!title.isEmpty()">
				and upper(dsc.title) like upper(concat('%', #{title}, '%'))
			</if>

			<if test="!category.isEmpty()">
				and upper(pc.category_name) = upper(#{category})
			</if>

		    <if test="!platform.isEmpty()">
				and upper(dsc.platform) = upper(#{platform})
			</if>

			<if test="!stockStatus.isEmpty()">
				and upper(dsc.stock_status) = upper(#{stockStatus})
			</if>

		    <if test="!studioName.isEmpty()">
				and upper(dsc.studio_name) = upper(#{studioName})
			</if>

		    <if test="!manufactureYear.isEmpty()">
				and upper(dsc.manufacture_year) = upper(#{manufactureYear})
			</if>

			<if test="!status.isEmpty()">
				and upper(dsc.status) = upper(#{status})
			</if>
		</where>
		<choose>
			<when test="sortType == 'ASC'">
				order by dsc.price asc
			</when>
			<when test="sortType == 'DESC'">
				order by dsc.price desc
			</when>
			<when test="sortType == 'DEFAULT'">
			</when>
		</choose>
	</select>


</mapper>