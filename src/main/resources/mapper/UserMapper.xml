<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="springbootvinylecommercebackend.mapper.UserMapper">

	<resultMap id="userResultMap" type="springbootvinylecommercebackend.model.User">
		<result column="id" property="id"/>
		<result column="password" property="password"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="gender" property="gender"/>
		<result column="fullname" property="fullname"/>
		<result column="birthday" property="birthday"/>
		<result column="address" property="address"/>
		<result column="role_id" property="roleId"/>
		<result column="created_at" property="createdAt" javaType="java.time.Instant"/>
		<result column="updated_at" property="updatedAt" javaType="java.time.Instant"/>
	</resultMap>

	<select id="getAllUsers" resultMap="userResultMap">
		SELECT usr.id
			 , usr.email
			 , usr.phone
			 , usr.gender
			 , usr.fullname
			 , usr.birthday
			 , usr.address
			 , usr.role_id
			 , usr.created_at
			 , usr.updated_at
		FROM user usr
	</select>

	<insert id="saveUser" >
		INSERT INTO user (
		password
		, email
		, fullname
		, role_id
		, created_at
		, updated_at
		) VALUES (
		 #{password}
		, #{email}
		, #{fullname}
		, #{roleId}
		, NOW()
		, NOW()
		)
	</insert>

	<update id="updateUserInfo">
		UPDATE user
		<set>
			<if test="email != null">
				, email=#{email}
			</if>
			<if test="phone != null">
				, phone=#{phone}
			</if>
			<if test="gender != null">
				, gender=#{gender}
			</if>
			<if test="fullname != null">
				, fullname=#{fullname}
			</if>
			<if test="birthday != null">
				, birthday=#{birthday}
			</if>
			<if test="address != null">
				, address=#{address}
			</if>
			<if test="password != null">
				, password=#{password}
			</if>
			, updated_at=NOW()
		</set>
		WHERE id = #{id}
	</update>

	<update id="changePassword">
		UPDATE user
		SET password=#{newPassword}
		WHERE id = #{userID}
	</update>

	<select id="getUserByEmail" resultMap="userResultMap">
        SELECT usr.id
             , usr.password
             , usr.email
             , usr.phone
             , usr.gender
             , usr.fullname
             , usr.birthday
             , usr.address
             , usr.role_id
        	 , usr.created_at
			 , usr.updated_at
        FROM user usr
        WHERE usr.email = #{email}
    </select>

	<select id="getUserById" resultMap="userResultMap">
		SELECT usr.id
			 , usr.email
			 , usr.phone
		     , usr.password
			 , usr.gender
			 , usr.fullname
			 , usr.birthday
			 , usr.address
			 , usr.role_id
			 , usr.created_at
			 , usr.updated_at
		FROM user usr
		WHERE usr.id = #{id}
	</select>

	<select id="existsByEmail" resultType="boolean">
		SELECT EXISTS(
			SELECT 1
			FROM user usr
			WHERE usr.email = #{email}
		)
	</select>
</mapper>